package ai.www.mygreendao.example;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import ai.www.mygreendao.example.CoinAddress;
import ai.www.mygreendao.example.Coins;
import ai.www.mygreendao.example.Note;

import ai.www.mygreendao.example.CoinAddressDao;
import ai.www.mygreendao.example.CoinsDao;
import ai.www.mygreendao.example.NoteDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig coinAddressDaoConfig;
    private final DaoConfig coinsDaoConfig;
    private final DaoConfig noteDaoConfig;

    private final CoinAddressDao coinAddressDao;
    private final CoinsDao coinsDao;
    private final NoteDao noteDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        coinAddressDaoConfig = daoConfigMap.get(CoinAddressDao.class).clone();
        coinAddressDaoConfig.initIdentityScope(type);

        coinsDaoConfig = daoConfigMap.get(CoinsDao.class).clone();
        coinsDaoConfig.initIdentityScope(type);

        noteDaoConfig = daoConfigMap.get(NoteDao.class).clone();
        noteDaoConfig.initIdentityScope(type);

        coinAddressDao = new CoinAddressDao(coinAddressDaoConfig, this);
        coinsDao = new CoinsDao(coinsDaoConfig, this);
        noteDao = new NoteDao(noteDaoConfig, this);

        registerDao(CoinAddress.class, coinAddressDao);
        registerDao(Coins.class, coinsDao);
        registerDao(Note.class, noteDao);
    }
    
    public void clear() {
        coinAddressDaoConfig.clearIdentityScope();
        coinsDaoConfig.clearIdentityScope();
        noteDaoConfig.clearIdentityScope();
    }

    public CoinAddressDao getCoinAddressDao() {
        return coinAddressDao;
    }

    public CoinsDao getCoinsDao() {
        return coinsDao;
    }

    public NoteDao getNoteDao() {
        return noteDao;
    }

}
